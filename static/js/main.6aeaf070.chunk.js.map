{"version":3,"sources":["Sanidentas_logotipas.svg","types.ts","helpers.ts","components/InvoicePage.tsx","components/OrderPage.tsx","components/MainForm.tsx","components/CalendarModal.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","FVEnum","monthWords","dateToWords","date","getFullYear","getMonth","format","InvoicePage","invoice","fV","style","height","padding","display","justifyContent","flexDirection","boxSizing","src","sanidentasLogo","width","alt","alignItems","fontWeight","fontSize","marginBottom","Invoice1","Invoice2","process","fontStyle","textAlign","Name","PersonalCode","Address","margin","Eur","Ct","colSpan","borderBottom","borderLeft","PriceInWords","flex","this","props","formValues","pages","pagesNumber","Array","fill","console","log","map","Component","OrderPage","order","Order1","Order2","MainForm","toggleCalendar","invoiceRef","useRef","doubleInvoiceRef","orderRef","useState","numbers","initialNumberObject","savedNumbersObject","retrievedObject","localStorage","getItem","JSON","parse","getLocal","setFormValue","setValue","e","target","name","value","useEffect","docNumbers","setItem","stringify","priceNumber","words","eurWord","decimalNumberWord","decimalNumber","lastNumber","lastNumberWord","hundredNumberWord","hundredNumber","hundredNumberFirstPosition","tenThousandNumberWord","tenThousandNumber","tenThousandNumberFirstPosition","tempThousandNumber","thousandNumberWord","thousandNumber","thousandNumberFirstPosition","priceToWordsHelper","Number","incrementInvoice","className","htmlFor","placeholder","id","readOnly","onClick","type","invoice1","onChange","invoice2","order1","order2","personalCode","address","Boolean","eurInWords","window","location","reload","onAfterPrint","trigger","content","current","ref","CalendarModal","setDate","locale","selectRange","newDate","isArray","length","Date","App","isCalendarModalVisible","setCalendarModalVisible","Logo","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6aeaf070.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sanidentas_logotipas.09a4a39a.svg\";","export enum FVEnum {\r\n    Invoice1 = \"invoice1\",\r\n    Invoice2 = \"invoice2\",\r\n\r\n    Order1 = \"order1\",\r\n    Order2 = \"order2\",\r\n\r\n    Eur = \"eur\",\r\n    Ct = \"ct\",\r\n    PriceInWords = \"eurInWords\",\r\n\r\n    Name = \"name\",\r\n    PersonalCode = \"personalCode\",\r\n    Address = \"address\"\r\n}\r\n","import format from 'date-fns/format';\r\n\r\nexport const setLocal = (docNumbers: any) => {\r\n    // Put the object into storage\r\n    localStorage.setItem('docNumbers', JSON.stringify(docNumbers));\r\n};\r\nexport const getLocal = () => {\r\n    // Retrieve the object from storage\r\n    var retrievedObject = localStorage.getItem('docNumbers');\r\n    if (retrievedObject) {\r\n        return JSON.parse(retrievedObject);\r\n    }\r\n    return null;\r\n};\r\nexport const monthWords = [\r\n    'sausio',\r\n    'vasario',\r\n    'kovo',\r\n    'balandžio',\r\n    'gegužės',\r\n    'birželio',\r\n    'liepos',\r\n    'rugpjūčio',\r\n    'rugsėjo',\r\n    'spalio',\r\n    'lapkričio',\r\n    'gruodžio',\r\n];\r\nexport const dateToWords = (date: Date) => {\r\n    return `${date.getFullYear()} m. ${monthWords[date.getMonth()]} ${format(\r\n        date,\r\n        'dd'\r\n    )} d.`;\r\n};\r\nexport const priceToWordsHelper = (priceNumber: number): string => {\r\n    var words = [];\r\n    words[0] = '';\r\n    words[1] = 'vienas ';\r\n    words[2] = 'du ';\r\n    words[3] = 'trys ';\r\n    words[4] = 'keturi ';\r\n    words[5] = 'penki ';\r\n    words[6] = 'šeši ';\r\n    words[7] = 'septyni ';\r\n    words[8] = 'aštuoni ';\r\n    words[9] = 'devyni ';\r\n    words[10] = 'dešimt ';\r\n    words[11] = 'vienuolika ';\r\n    words[12] = 'dvylika ';\r\n    words[13] = 'trylika ';\r\n    words[14] = 'keturiuolika ';\r\n    words[15] = 'penkiolika ';\r\n    words[16] = 'šešiolika ';\r\n    words[17] = 'septyniolika ';\r\n    words[18] = 'aštuoniolika ';\r\n    words[19] = 'devyniolika ';\r\n    words[20] = 'dvidešimt ';\r\n    words[30] = 'trisdešimt ';\r\n    words[40] = 'keturiasdešimt ';\r\n    words[50] = 'penkiasdešimt ';\r\n    words[60] = 'šešiasdešimt ';\r\n    words[70] = 'septyniasdešimt ';\r\n    words[80] = 'aštuoniasdešimt ';\r\n    words[90] = 'devyniasdešimt ';\r\n    words[100] = 'šimtas ';\r\n    words[101] = 'šimtai ';\r\n    words[1000] = 'tūkstantis ';\r\n    words[1001] = 'tūkstančiai ';\r\n    words[10000] = 'tūkstančių ';\r\n\r\n    let priceInWords = '';\r\n    const eurWord = priceNumber\r\n        ? priceNumber % 10 === 1 && priceNumber % 100 !== 11\r\n            ? 'euras'\r\n            : priceNumber % 10 !== 0 &&\r\n              (priceNumber % 100 < 10 || priceNumber % 100 > 20)\r\n            ? 'eurai'\r\n            : 'eurų'\r\n        : '';\r\n    let decimalNumberWord = '';\r\n    const decimalNumber = priceNumber % 100;\r\n\r\n    if (decimalNumber) {\r\n        if (decimalNumber >= 10 && decimalNumber <= 20) {\r\n            decimalNumberWord = words[decimalNumber];\r\n            priceNumber -= decimalNumber;\r\n        } else {\r\n            decimalNumberWord = words[decimalNumber - (decimalNumber % 10)];\r\n            priceNumber = priceNumber - decimalNumber + (decimalNumber % 10);\r\n        }\r\n    }\r\n\r\n    const lastNumber = priceNumber % 10;\r\n    let lastNumberWord = '';\r\n\r\n    if (lastNumber) {\r\n        lastNumberWord = words[priceNumber % 10];\r\n        priceNumber -= lastNumber;\r\n    }\r\n\r\n    let hundredNumberWord = '';\r\n    const hundredNumber = priceNumber % 1000;\r\n\r\n    if (hundredNumber) {\r\n        const hundredNumberFirstPosition = hundredNumber / 100;\r\n        if (hundredNumberFirstPosition === 1) {\r\n            hundredNumberWord = words[100];\r\n        } else {\r\n            hundredNumberWord = words[hundredNumberFirstPosition] + words[101];\r\n        }\r\n        priceNumber -= hundredNumber;\r\n    }\r\n\r\n    let tenThousandNumberWord = '';\r\n    const tenThousandNumber = priceNumber % 100000;\r\n\r\n    if (tenThousandNumber >= 10000) {\r\n        const tenThousandNumberFirstPosition = tenThousandNumber / 1000;\r\n        if (\r\n            tenThousandNumberFirstPosition >= 10 &&\r\n            tenThousandNumberFirstPosition <= 20\r\n        ) {\r\n            tenThousandNumberWord =\r\n                words[tenThousandNumberFirstPosition] + words[10000];\r\n            priceNumber -= tenThousandNumber;\r\n        } else {\r\n            const tempThousandNumber = (priceNumber % 10000) / 1000;\r\n            tenThousandNumberWord =\r\n                words[tenThousandNumberFirstPosition - tempThousandNumber];\r\n            if (!tempThousandNumber) {\r\n                tenThousandNumberWord += words[10000];\r\n            }\r\n            priceNumber =\r\n                priceNumber - tenThousandNumber + (priceNumber % 10000);\r\n        }\r\n    }\r\n    let thousandNumberWord = '';\r\n    const thousandNumber = priceNumber % 10000;\r\n\r\n    if (thousandNumber) {\r\n        const thousandNumberFirstPosition = thousandNumber / 1000;\r\n        if (thousandNumberFirstPosition === 1) {\r\n            if (tenThousandNumberWord) {\r\n                thousandNumberWord =\r\n                    words[thousandNumberFirstPosition] + words[1000];\r\n            } else {\r\n                thousandNumberWord = words[1000];\r\n            }\r\n        } else {\r\n            thousandNumberWord =\r\n                words[thousandNumberFirstPosition] + words[1001];\r\n        }\r\n        priceNumber -= thousandNumber;\r\n    }\r\n    priceInWords =\r\n        tenThousandNumberWord +\r\n        thousandNumberWord +\r\n        hundredNumberWord +\r\n        decimalNumberWord +\r\n        lastNumberWord +\r\n        eurWord;\r\n\r\n    return priceInWords;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { FVEnum } from \"../types\";\r\nimport { dateToWords } from \"../helpers\";\r\nimport sanidentasLogo from \"../Sanidentas_logotipas.svg\";\r\ninterface IProps {\r\n  formValues: {\r\n    [FVEnum.Order1]: number;\r\n    [FVEnum.Order2]: number;\r\n    [FVEnum.Invoice1]: number;\r\n    [FVEnum.Invoice2]: number;\r\n    [FVEnum.Eur]: string | null;\r\n    [FVEnum.Ct]: string | null;\r\n    [FVEnum.PriceInWords]: string;\r\n\r\n    [FVEnum.Name]: string;\r\n    [FVEnum.PersonalCode]: string | null;\r\n    [FVEnum.Address]: string;\r\n  };\r\n  date: Date;\r\n  pages: number;\r\n}\r\nexport class InvoicePage extends Component<IProps> {\r\n  render() {\r\n    const { formValues: fV, date, pages } = this.props;\r\n    const pagesNumber = new Array(pages).fill(0);\r\n    console.log(pagesNumber);\r\n    return <>{pagesNumber.map(() => this.invoice(fV, date))}</>;\r\n  }\r\n  invoice = (fV: any, date: Date) => (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        padding: \"50px\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"column\",\r\n        boxSizing: \"border-box\",\r\n      }}\r\n    >\r\n      <div>\r\n        <img src={sanidentasLogo} style={{ width: 250 }} alt=\"sanidentas\" />\r\n        <div\r\n          style={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              fontWeight: \"bold\",\r\n              fontSize: 18,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            SĄSKAITA FAKTŪRA\r\n          </div>\r\n          <div style={{ padding: \"5px 0\" }}>\r\n            Serija SDS Nr. {fV[FVEnum.Invoice1]}-{fV[FVEnum.Invoice2]}\r\n          </div>\r\n          <div style={{ padding: \"5px 0\" }}>{dateToWords(date)}</div>\r\n          <div style={{ padding: \"5px 0\" }}>Vilnius</div>\r\n        </div>\r\n        <div style={{ padding: \"5px 0\", fontWeight: \"bold\" }}>\r\n          Paslaugų teikėjas:\r\n        </div>\r\n        <div style={{ padding: \"5px 0\" }}>\r\n          UAB \"Sanidentas\" įmonės kodas 300994735\r\n        </div>\r\n        <div style={{ padding: \"5px 0\" }}>\r\n          Duomenys kaupiami ir saugomi Juridinių asmenų registre\r\n        </div>\r\n        <div style={{ padding: \"5px 0\" }}>\r\n          Karaliaučiaus g. 2-58, LT-06281 Vilnius\r\n        </div>\r\n        <div style={{ padding: \"5px 0\" }}>Tel. +370 671 02370</div>\r\n        <div style={{ padding: \"5px 0\" }}>\r\n          El. p. sanidentas@gmail.com www.sanidentas.lt\r\n        </div>\r\n        <div style={{ padding: \"5px 0\" }}>\r\n          A. s. {process.env.REACT_APP_SASKAITA} swedbank\r\n        </div>\r\n        <div\r\n          style={{\r\n            fontStyle: \"italic\",\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n            padding: \"25px 0\",\r\n          }}\r\n        />\r\n\r\n        <div style={{ fontWeight: \"bold\" }}>Paslaugų pirkėjas:</div>\r\n        <div style={{ padding: \"5px 0\" }}>{fV[FVEnum.Name]}</div>\r\n        <div style={{ padding: \"5px 0\" }}>\r\n          Asmens (įmonės) kodas: {fV[FVEnum.PersonalCode]}\r\n        </div>\r\n        <div style={{ padding: \"5px 0\" }}>Adresas: {fV[FVEnum.Address]}</div>\r\n\r\n        <table style={{ width: \"100%\", margin: \"5px auto\" }}>\r\n          <thead style={{ fontWeight: 700 }}>\r\n            <tr>\r\n              <th>Paslaugos pavadinimas</th>\r\n              <th style={{ textAlign: \"center\" }}>Kiekis</th>\r\n              <th style={{ textAlign: \"center\" }}>Kaina, EUR</th>\r\n              <th style={{ textAlign: \"center\" }}>Suma, EUR</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr>\r\n              <td>dantų gydymas</td>\r\n              <td style={{ textAlign: \"center\" }}>1</td>\r\n              <td style={{ textAlign: \"center\" }}>\r\n                {fV[FVEnum.Eur]}.{fV[FVEnum.Ct] ? fV[FVEnum.Ct] : \"00\"}\r\n              </td>\r\n              <td style={{ textAlign: \"center\" }}>\r\n                {fV[FVEnum.Eur]}.{fV[FVEnum.Ct] ? fV[FVEnum.Ct] : \"00\"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                colSpan={3}\r\n                style={{\r\n                  borderBottom: \"transparent\",\r\n                  borderLeft: \"transparent\",\r\n                  textAlign: \"right\",\r\n                  fontWeight: \"bold\",\r\n                }}\r\n              >\r\n                Iš viso EUR:\r\n              </td>\r\n              <td\r\n                style={{\r\n                  fontWeight: \"bold\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              >\r\n                {fV[FVEnum.Eur]}.{fV[FVEnum.Ct] ? fV[FVEnum.Ct] : \"00\"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <div style={{ padding: \"5px 0\" }}>\r\n          Suma žodžiais: {fV[FVEnum.PriceInWords]}.\r\n        </div>\r\n        <div style={{ display: \"flex\", padding: \"20px 0\" }}>\r\n          <span>Sąskaita išrašė </span>\r\n          <div style={{ flex: 1, borderBottom: \"1px solid\" }} />\r\n        </div>\r\n        <div style={{ display: \"flex\", padding: \"20px 0\" }}>\r\n          <span>Sąskaita už suteiktas paslaugas gavau </span>\r\n          <div style={{ flex: 1, borderBottom: \"1px solid\" }} />\r\n        </div>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          fontSize: 10,\r\n        }}\r\n      >\r\n        <div style={{ padding: \"5px 0\" }}>UAB \"SANIDENTAS\"</div>\r\n        <div style={{ padding: \"5px 0\" }}>ODONTOLOGIJOS KLINIKA</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InvoicePage;\r\n","import React, { Component } from 'react';\r\nimport { FVEnum } from '../types';\r\nimport { dateToWords } from '../helpers';\r\ninterface IProps {\r\n    formValues: {\r\n        [FVEnum.Order1]: number;\r\n        [FVEnum.Order2]: number;\r\n        [FVEnum.Invoice1]: number;\r\n        [FVEnum.Invoice2]: number;\r\n        [FVEnum.Eur]: string | null;\r\n        [FVEnum.Ct]: string | null;\r\n        [FVEnum.PriceInWords]: string;\r\n\r\n        [FVEnum.Name]: string;\r\n        [FVEnum.PersonalCode]: string | null;\r\n        [FVEnum.Address]: string;\r\n    };\r\n    date: Date;\r\n}\r\nexport class OrderPage extends Component<IProps> {\r\n    render() {\r\n        const { formValues: fV, date } = this.props;\r\n        return (\r\n            <div style={{ padding: '50px 80px' }}>\r\n                {this.order(fV, date)}\r\n                <div\r\n                    style={{\r\n                        width: '100%',\r\n                        borderBottom: '1px dashed',\r\n                        margin: '50px 0 30px',\r\n                    }}\r\n                />\r\n                {this.order(fV, date)}\r\n            </div>\r\n        );\r\n    }\r\n    order = (fV: any, date: Date) => (\r\n        <>\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    textAlign: 'right',\r\n                    fontSize: 12,\r\n                    boxSizing: 'border-box',\r\n                }}\r\n            >\r\n                <div>UAB \"Sanidentas\"</div>\r\n                <div>Karaliaučiaus g. 2-58, LT-06281 Vilnius</div>\r\n                <div>įmonės kodas 3000994735</div>\r\n                <div>A/S {process.env.REACT_APP_SASKAITA}</div>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    width: '100%',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    alignItems: 'center',\r\n                    margin: '15px 0',\r\n                }}\r\n            >\r\n                <div style={{ fontSize: 15 }}>\r\n                    KASOS PAJAMŲ ORDERIS Serija SD Nr. {fV[FVEnum.Order1]}-\r\n                    {fV[FVEnum.Order2]}\r\n                </div>\r\n                <div style={{ padding: '5px 0' }}>{dateToWords(date)}</div>\r\n            </div>\r\n            <div style={{ padding: '5px 0' }}>Mokėtojas: {fV[FVEnum.Name]}</div>\r\n            <div style={{ padding: '5px 0' }}>\r\n                Asmens (įmonės) kodas: {fV[FVEnum.PersonalCode]}\r\n            </div>\r\n            <div style={{ padding: '5px 0' }}>\r\n                Adresas: {fV[FVEnum.Address]}\r\n            </div>\r\n            <div style={{ padding: '20px 0' }}>\r\n                Operacijos turinys: dantų gydymas\r\n            </div>\r\n            <div style={{ padding: '5px 0' }}>\r\n                Suma: {fV[FVEnum.Eur]} {fV[FVEnum.Ct] ? fV[FVEnum.Ct] : '00'}\r\n            </div>\r\n            <div style={{ padding: '5px 0' }}>\r\n                Suma žodžiais:{' '}\r\n                <span style={{ fontStyle: 'italic' }}>\r\n                    {fV[FVEnum.PriceInWords]}.\r\n                </span>\r\n            </div>\r\n            <div style={{ display: 'flex', padding: '15px 0' }}>\r\n                <span>Vyr. Buhalteris (buhalteris)</span>\r\n                <div style={{ flex: 1, borderBottom: '1px solid' }} />\r\n            </div>\r\n            <div style={{ display: 'flex', padding: '15px 0' }}>\r\n                <span>Gavo</span>\r\n                <div style={{ flex: 1, borderBottom: '1px solid' }} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderPage;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport format from 'date-fns/format';\r\nimport ReactToPrint from 'react-to-print';\r\nimport InvoicePage from './InvoicePage';\r\nimport { priceToWordsHelper, getLocal, setLocal } from '../helpers';\r\nimport { FVEnum } from '../types';\r\nimport OrderPage from './OrderPage';\r\n\r\ninterface IProps {\r\n    date: Date;\r\n    toggleCalendar(): void;\r\n}\r\n\r\nexport const MainForm = ({ date, toggleCalendar }: IProps) => {\r\n    const invoiceRef: any = useRef(null);\r\n    const doubleInvoiceRef: any = useRef(null);\r\n    const orderRef: any = useRef(null);\r\n\r\n    const [formValues, setFormValue] = useState(() => {\r\n        const initialNumberObject = {\r\n            [FVEnum.Order1]: 0,\r\n            [FVEnum.Order2]: 0,\r\n            [FVEnum.Invoice1]: 0,\r\n            [FVEnum.Invoice2]: 0,\r\n        };\r\n        const savedNumbersObject = getLocal();\r\n        let numbers;\r\n        if (savedNumbersObject) {\r\n            numbers = savedNumbersObject;\r\n        } else {\r\n            numbers = initialNumberObject;\r\n        }\r\n        return {\r\n            ...numbers,\r\n            [FVEnum.Eur]: null,\r\n            [FVEnum.Ct]: null,\r\n            [FVEnum.PriceInWords]: '',\r\n\r\n            [FVEnum.Name]: '',\r\n            [FVEnum.PersonalCode]: null,\r\n            [FVEnum.Address]: '',\r\n        };\r\n    });\r\n    const setValue = (e: any) => {\r\n        const { name, value } = e.target;\r\n        if (name) {\r\n            setFormValue({ ...formValues, [name]: value });\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        setLocal({\r\n            [FVEnum.Order1]: formValues[FVEnum.Order1],\r\n            [FVEnum.Order2]: formValues[FVEnum.Order2],\r\n            [FVEnum.Invoice1]: formValues[FVEnum.Invoice1],\r\n            [FVEnum.Invoice2]: formValues[FVEnum.Invoice2],\r\n        });\r\n    }, [\r\n        formValues[FVEnum.Order1],\r\n        formValues[FVEnum.Order2],\r\n        formValues[FVEnum.Invoice1],\r\n        formValues[FVEnum.Invoice2],\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setFormValue({\r\n            ...formValues,\r\n            [FVEnum.PriceInWords]: `${priceToWordsHelper(\r\n                Number(formValues[FVEnum.Eur])\r\n            )} ${formValues[FVEnum.Ct] ? formValues[FVEnum.Ct] : 0} ct`,\r\n        });\r\n    }, [formValues[FVEnum.Eur], formValues[FVEnum.Ct]]);\r\n    const incrementInvoice = () => {\r\n        setFormValue({\r\n            ...formValues,\r\n            [FVEnum.Invoice2]: Number(formValues[FVEnum.Invoice2]) + 1,\r\n        });\r\n    };\r\n    const incrementOrder = () => {\r\n        setFormValue({\r\n            ...formValues,\r\n            [FVEnum.Order2]: Number(formValues[FVEnum.Order2]) + 1,\r\n        });\r\n    };\r\n    return (\r\n        <div className='main-form'>\r\n            <div className='form-inner'>\r\n                <div className='form-column'>\r\n                    <div className='field'>\r\n                        <label htmlFor='date'>Data</label>\r\n                        <input\r\n                            placeholder='Data'\r\n                            id='date'\r\n                            readOnly\r\n                            onClick={toggleCalendar}\r\n                            value={format(date, 'yyyy-MM-dd')}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='field'>\r\n                        <label htmlFor='SDS2'>Sąskaita (SDS)</label>\r\n                        <div className='double-input'>\r\n                            <input\r\n                                id='SDS1'\r\n                                className='left-db-input'\r\n                                type='number'\r\n                                name={FVEnum.Invoice1}\r\n                                value={formValues.invoice1}\r\n                                onChange={setValue}\r\n                                placeholder='Sąskaita'\r\n                            />\r\n\r\n                            <input\r\n                                id='SDS2'\r\n                                type='number'\r\n                                className='right-db-input'\r\n                                name={FVEnum.Invoice2}\r\n                                value={formValues.invoice2}\r\n                                onChange={setValue}\r\n                                placeholder='Sąskaita'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label htmlFor={FVEnum.Order2}>Orderis (SD)</label>\r\n                        <div className='double-input'>\r\n                            <input\r\n                                className='left-db-input'\r\n                                type='number'\r\n                                name={FVEnum.Order1}\r\n                                value={formValues.order1}\r\n                                onChange={setValue}\r\n                                placeholder='Orderis'\r\n                            />\r\n\r\n                            <input\r\n                                className='right-db-input'\r\n                                type='number'\r\n                                id={FVEnum.Order2}\r\n                                name={FVEnum.Order2}\r\n                                value={formValues.order2}\r\n                                onChange={setValue}\r\n                                placeholder='Orderis'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='field'>\r\n                        <label htmlFor={FVEnum.Eur}>Suma</label>\r\n                        <div className='double-input price'>\r\n                            <input\r\n                                className='eur'\r\n                                type='number'\r\n                                id={FVEnum.Eur}\r\n                                name={FVEnum.Eur}\r\n                                value={formValues[FVEnum.Eur]}\r\n                                onChange={setValue}\r\n                                placeholder='Eurai'\r\n                            />\r\n\r\n                            <input\r\n                                className='ct'\r\n                                type='number'\r\n                                name={FVEnum.Ct}\r\n                                value={formValues[FVEnum.Ct]}\r\n                                onChange={setValue}\r\n                                placeholder='Centai'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='form-column'>\r\n                    <div className='field'>\r\n                        <label htmlFor={FVEnum.Name}>Vardas Pavardė</label>\r\n                        <input\r\n                            id={FVEnum.Name}\r\n                            name={FVEnum.Name}\r\n                            value={formValues.name}\r\n                            onChange={setValue}\r\n                            placeholder='Vardas Pavardė'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className='field'>\r\n                        <label htmlFor={FVEnum.PersonalCode}>\r\n                            Asmens (įmonės) kodas\r\n                        </label>\r\n                        <input\r\n                            type='number'\r\n                            id={FVEnum.PersonalCode}\r\n                            name={FVEnum.PersonalCode}\r\n                            value={formValues.personalCode}\r\n                            onChange={setValue}\r\n                            placeholder='Asmens (įmonės) kodas'\r\n                        />\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label htmlFor={FVEnum.Address}>Adresas</label>\r\n                        <input\r\n                            type='text'\r\n                            id={FVEnum.Address}\r\n                            name={FVEnum.Address}\r\n                            value={formValues.address}\r\n                            onChange={setValue}\r\n                            placeholder='Adresas'\r\n                        />\r\n                    </div>\r\n                    <div className='field'>\r\n                        <label htmlFor='sumaZodziais'>Suma žodžiais</label>\r\n                        <input\r\n                            id='sumaZodziais'\r\n                            placeholder='Suma žodžiais'\r\n                            value={\r\n                                Boolean(formValues[FVEnum.Eur]) ||\r\n                                Boolean(formValues[FVEnum.Ct])\r\n                                    ? formValues.eurInWords\r\n                                    : ''\r\n                            }\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='buttons-container'>\r\n                <button\r\n                    className='btn secondary'\r\n                    onClick={() => window.location.reload()}\r\n                >\r\n                    Išvalyti formą\r\n                </button>\r\n\r\n                <ReactToPrint\r\n                    onAfterPrint={incrementInvoice}\r\n                    trigger={() => (\r\n                        <button className='btn primary'>\r\n                            Spausdinti sąskaita faktūra\r\n                        </button>\r\n                    )}\r\n                    content={() => invoiceRef && invoiceRef.current}\r\n                />\r\n                <ReactToPrint\r\n                    onAfterPrint={incrementInvoice}\r\n                    trigger={() => (\r\n                        <button className='btn primary'>\r\n                            Spausdinti 2 sąskaitas faktūras\r\n                        </button>\r\n                    )}\r\n                    content={() => doubleInvoiceRef && doubleInvoiceRef.current}\r\n                />\r\n                <ReactToPrint\r\n                    onAfterPrint={incrementOrder}\r\n                    trigger={() => (\r\n                        <button className='btn primary'>Spausdinti KPO</button>\r\n                    )}\r\n                    content={() => orderRef && orderRef.current}\r\n                />\r\n            </div>\r\n            <div style={{ display: 'none' }}>\r\n                <div ref={orderRef}>\r\n                    <OrderPage formValues={formValues} date={date} />\r\n                </div>\r\n                <div ref={doubleInvoiceRef}>\r\n                    <InvoicePage\r\n                        formValues={formValues}\r\n                        date={date}\r\n                        pages={2}\r\n                    />\r\n                </div>\r\n                <div ref={invoiceRef}>\r\n                    <InvoicePage\r\n                        formValues={formValues}\r\n                        date={date}\r\n                        pages={1}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default MainForm;\r\n","import React from \"react\";\r\nimport Calendar from \"react-calendar\";\r\ninterface IProps {\r\n  date: Date;\r\n  toggleCalendar(): void;\r\n  setDate: (newDate: Date) => void;\r\n}\r\nexport const CalendarModal = ({ setDate, date, toggleCalendar }: IProps) => {\r\n  return (\r\n    <div className=\"calendar-modal\">\r\n      <div className=\"calendar-backdrop\" onClick={toggleCalendar} />\r\n      <Calendar\r\n        className=\"calendar\"\r\n        locale=\"lt\"\r\n        selectRange={false}\r\n        onChange={newDate => {\r\n          if (Array.isArray(newDate) && newDate.length) {\r\n            setDate(newDate[0]);\r\n          } else if (newDate instanceof Date) {\r\n            setDate(newDate);\r\n          }\r\n        }}\r\n        value={date}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarModal;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport MainForm from \"./components/MainForm\";\r\nimport CalendarModal from \"./components/CalendarModal\";\r\nimport Logo from \"./Sanidentas_logotipas.svg\";\r\nfunction App() {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    const [isCalendarModalVisible, setCalendarModalVisible] = useState(false);\r\n    const toggleCalendar = () =>\r\n        setCalendarModalVisible(!isCalendarModalVisible);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <img src={Logo} alt=\"sanidentas\" style={{ width: 150 }} />\r\n            </header>\r\n            <MainForm date={date} toggleCalendar={toggleCalendar} />\r\n            {isCalendarModalVisible && (\r\n                <CalendarModal\r\n                    setDate={setDate}\r\n                    date={date}\r\n                    toggleCalendar={toggleCalendar}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}